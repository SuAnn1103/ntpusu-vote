generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Voting {
  id         Int         @unique @default(autoincrement())
  name       String
  startTime  DateTime
  endTime    DateTime
  candidates Candidate[]
  onlyOne    String?
  groupId    Int
  group      Group       @relation(fields: [groupId], references: [id])
  delete     Boolean     @default(false)

  @@id([id, groupId])
  @@unique([name, groupId])
}

model Candidate {
  id       Int      @unique @default(autoincrement())
  name     String
  ballots  Ballot[]
  votingId Int
  voting   Voting   @relation(fields: [votingId], references: [id], onDelete: Cascade)

  @@id([id, votingId])
  @@unique([name, votingId])
}

model Ballot {
  token       String    @unique
  time        DateTime  @default(now())
  candidateId Int
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)

  @@id([token, candidateId])
}

model Voter {
  id           Int            @id
  voterInGroup VoterInGroup[]
}

model Group {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  voterInGroup VoterInGroup[]
  voting       Voting[]
}

model VoterInGroup {
  voterId Int
  voter   Voter @relation(fields: [voterId], references: [id], onDelete: Cascade)

  groupId Int
  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([voterId, groupId])
}

model Admin {
  id Int @id
}
