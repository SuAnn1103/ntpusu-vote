generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Voting {
  id         Int         @id @default(autoincrement())
  name       String
  startTime  DateTime
  endTime    DateTime
  candidates Candidate[]
  onlyOne    Boolean
  archive    Boolean     @default(false)

  groupId Int
  group   Group @relation(fields: [groupId], references: [id])
}

model Candidate {
  name    String
  ballots Ballot[]
  photo   String?

  groupId  Int
  votingId Int
  voting   Voting @relation(fields: [votingId], references: [id], onDelete: Cascade)

  @@id([votingId, name])
}

model Ballot {
  token      String   @unique
  time       DateTime @default(now())
  validation String

  votingId      Int
  candidateName String
  candidate     Candidate @relation(fields: [votingId, candidateName], references: [votingId, name], onDelete: Cascade)

  @@id([votingId, candidateName, token])
}

model Voter {
  id Int @id

  voterInGroup VoterInGroup[]
}

model Group {
  id   Int    @id @default(autoincrement())
  name String @unique

  voterInGroup VoterInGroup[]
  voting       Voting[]
}

model VoterInGroup {
  voterId Int
  voter   Voter @relation(fields: [voterId], references: [id], onDelete: Cascade)

  groupId Int
  group   Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@id([voterId, groupId])
}

model Admin {
  id Int @id
}
